//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2011.08.09 at 11:21:09 PM PDT 
//


package org.cnx.resourcemapping;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.bind.annotation.adapters.CollapsedStringAdapter;
import javax.xml.bind.annotation.adapters.XmlJavaTypeAdapter;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.cnx.resourcemapping package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _Jpg_QNAME = new QName("", "jpg");
    private final static QName _RepositoryId_QNAME = new QName("", "repository-id");
    private final static QName _ResourceId_QNAME = new QName("", "resource-id");
    private final static QName _OriginUrl_QNAME = new QName("", "origin-url");
    private final static QName _HeightInPixels_QNAME = new QName("", "height-in-pixels");
    private final static QName _WidgthInPixels_QNAME = new QName("", "widgth-in-pixels");
    private final static QName _Bitrate_QNAME = new QName("", "bitrate");
    private final static QName _Mp3_QNAME = new QName("", "mp3");
    private final static QName _Url_QNAME = new QName("", "url");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.cnx.resourcemapping
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link Resources }
     * 
     */
    public Resources createResources() {
        return new Resources();
    }

    /**
     * Create an instance of {@link Resource }
     * 
     */
    public Resource createResource() {
        return new Resource();
    }

    /**
     * Create an instance of {@link Internet }
     * 
     */
    public Internet createInternet() {
        return new Internet();
    }

    /**
     * Create an instance of {@link Repository }
     * 
     */
    public Repository createRepository() {
        return new Repository();
    }

    /**
     * Create an instance of {@link VariantCategory }
     * 
     */
    public VariantCategory createVariantCategory() {
        return new VariantCategory();
    }

    /**
     * Create an instance of {@link LocationInformation }
     * 
     */
    public LocationInformation createLocationInformation() {
        return new LocationInformation();
    }

    /**
     * Create an instance of {@link ContentTypeAudio }
     * 
     */
    public ContentTypeAudio createContentTypeAudio() {
        return new ContentTypeAudio();
    }

    /**
     * Create an instance of {@link ContentTypeImage }
     * 
     */
    public ContentTypeImage createContentTypeImage() {
        return new ContentTypeImage();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentTypeImage }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "jpg")
    public JAXBElement<ContentTypeImage> createJpg(ContentTypeImage value) {
        return new JAXBElement<ContentTypeImage>(_Jpg_QNAME, ContentTypeImage.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "repository-id")
    @XmlJavaTypeAdapter(CollapsedStringAdapter.class)
    public JAXBElement<String> createRepositoryId(String value) {
        return new JAXBElement<String>(_RepositoryId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "resource-id")
    public JAXBElement<String> createResourceId(String value) {
        return new JAXBElement<String>(_ResourceId_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "origin-url")
    public JAXBElement<String> createOriginUrl(String value) {
        return new JAXBElement<String>(_OriginUrl_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "height-in-pixels")
    public JAXBElement<String> createHeightInPixels(String value) {
        return new JAXBElement<String>(_HeightInPixels_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "widgth-in-pixels")
    public JAXBElement<String> createWidgthInPixels(String value) {
        return new JAXBElement<String>(_WidgthInPixels_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "bitrate")
    public JAXBElement<String> createBitrate(String value) {
        return new JAXBElement<String>(_Bitrate_QNAME, String.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ContentTypeAudio }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "mp3")
    public JAXBElement<ContentTypeAudio> createMp3(ContentTypeAudio value) {
        return new JAXBElement<ContentTypeAudio>(_Mp3_QNAME, ContentTypeAudio.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link String }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "url")
    public JAXBElement<String> createUrl(String value) {
        return new JAXBElement<String>(_Url_QNAME, String.class, null, value);
    }

}
