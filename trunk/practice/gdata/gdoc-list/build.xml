<?xml version="1.0" encoding="UTF-8"?>
<project name="gdoc-list" default="package" basedir=".">
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />

	<property name="temp.dir" location="temp" />
	<property name="build.dir" location="${temp.dir}/build" />
	<property name="build.dir.classes" location="${build.dir}/classes" />
	<property name="build.jar" value="${build.dir}/mygdoc.jar" />
	<property name="dist.dir" location="${temp.dir}/dist" />

	<path id="build.classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<property name="manifest.build.by" value="arjun" />
	<property name="manifest.created.by" value="arjun" />
	<property name="manifest.main.class" value="com.arjunsatyapal.practice.gdata.Main" />
	
	<target name="init">
		<tstamp />
		<mkdir dir="${build.dir.classes}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<javac srcdir="${src.dir}" destdir="${build.dir.classes}" classpathref="build.classpath" />
	</target>

	<target name="package" depends="compile">
	  <echo>=== PACKAGE ===</echo>
	  
	  <!-- convert build.classpath to mf.classpath (the string needed for the manifest task) -->
	  <pathconvert property="mf.classpath" pathsep=" ">
	      <path refid="build.classpath" />
	      <flattenmapper />
	  </pathconvert>

	  <tstamp/><!-- needed for TODAY -->
	  <manifest file="${temp.dir}/MANIFEST.MF">
	    <attribute name="Built-By" value="${manifest.built.by}"/>
	    <attribute name="Created-By" value="${manifest.created.by}"/>
	    <attribute name="Main-Class" value="${manifest.main.class}"/>
	    <attribute name="Built-Date" value="${TODAY}"/>
	    <attribute name="Class-Path" value="${mf.classpath}" />
	  </manifest>
	  
	  <!-- create the jar file, including the manifest file we just created -->
	  <jar basedir="${build.dir.classes}" 
	       destfile="${build.jar}"
	       includes="**/*.*"
	       excludes="**/*Test*"
	       manifest="${temp.dir}/MANIFEST.MF" />

	  <!-- copy all the jar files out to the destination directory (dest.dir) -->
	  <copy todir="${build.dir}">
	    <fileset dir="${lib.dir}">
	      <include name="*.jar"/>
	    </fileset>
	  </copy>

	  <delete dir="${build.dir.classes}" />
	</target>

	
	<target name="clean" description="clean up">
		<delete dir="temp" />
	</target>
</project>