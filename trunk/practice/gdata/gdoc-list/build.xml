<?xml version="1.0" encoding="UTF-8"?>
<project name="gdoc-list" default="package" basedir=".">
	<property name="src.dir" value="src" />
	<property name="lib.dir" value="lib" />

	<property name="temp.dir" location="temp" />
	<property name="build.dir" location="${temp.dir}/build" />
	<property name="build.dir.classes" location="${build.dir}/classes" />
	<property name="build.dir.jars" location="${build.dir}/jars" />
	<property name="build.jar" value="${build.dir.jars}/mygdoc.jar" />
	<property name="executablejar" value="${build.dir}/executable.jar" />


	<property name="dist.dir" location="${temp.dir}/dist" />

	<path id="build.classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
	</path>

	<property name="manifest.mf" value="${temp.dir}/MANIFEST>MF" />
	<property name="manifest.build.by" value="arjun" />
	<property name="manifest.created.by" value="arjun" />
	<property name="manifest.main.class" value="com.arjunsatyapal.practice.gdata.Main" />

	<target name="init" depends="clean">
		<tstamp />
		<mkdir dir="${build.dir.classes}" />
		<mkdir dir="${build.dir.jars}" />
	</target>

	<target name="compile" depends="init" description="compile the source ">
		<javac srcdir="${src.dir}" destdir="${build.dir.classes}" classpathref="build.classpath" debug="on"/>
	</target>

	<target name="package" depends="compile">
		<echo>=== PACKAGE ===</echo>

		<!-- convert build.classpath to mf.classpath (the string needed for the manifest task) -->
		<pathconvert property="mf.classpath" pathsep=" ">
			<path refid="build.classpath" />
			<flattenmapper />
		</pathconvert>

		<tstamp/>
		<!-- needed for TODAY -->
		<manifest file="${manifest.mf}">
			<attribute name="Built-By" value="${manifest.built.by}"/>
			<attribute name="Created-By" value="${manifest.created.by}"/>
			<attribute name="Main-Class" value="${manifest.main.class}"/>
			<attribute name="Built-Date" value="${TODAY}"/>
			<attribute name="Class-Path" value="${mf.classpath}" />
		</manifest>

		<!-- create the jar file, including the manifest file we just created -->
		<jar basedir="${build.dir.classes}" 
	       destfile="${build.jar}"
	       includes="**/*.*"
	       excludes="**/*Test*"
	       manifest="${manifest.mf}" />

		<!-- copy all the jar files out to the destination directory (dest.dir) -->
		<copy todir="${build.dir.jars}">
			<fileset dir="${lib.dir}">
				<include name="*.jar"/>
			</fileset>
		</copy>

		<zip destfile="${executablejar}">
			<zipgroupfileset dir="${build.dir.jars}" includes="*.jar"/>
		</zip>

		<delete dir="${build.dir.classes}" />
		
		<echo> Execute : java -jar ${executablejar} </echo>
	</target>

	<target name="run" depends="package" >
		<java jar="${executablejar}" fork="true"/>
	</target>

	<target name="clean" description="clean up">
		<delete dir="temp" />
	</target>
</project>